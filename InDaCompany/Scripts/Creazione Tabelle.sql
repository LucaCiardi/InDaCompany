CREATE TABLE Utenti (
    ID INT IDENTITY PRIMARY KEY,
    Nome NVARCHAR(50) NOT NULL,
    Cognome NVARCHAR(50) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    PasswordHash VARCHAR(128) NOT NULL,
    Ruolo VARCHAR(20) NOT NULL,
    Team VARCHAR(50) NULL,
    DataCreazione DATETIME DEFAULT GETDATE(),
    CONSTRAINT UC_Email UNIQUE (Email),
    CONSTRAINT CHK_Ruolo CHECK (Ruolo IN ('Dipendente', 'Manager', 'Admin'))
);

CREATE TABLE Forum (
    ID INT IDENTITY PRIMARY KEY,
    Nome VARCHAR(100) NOT NULL,
    Descrizione VARCHAR(255) NULL,
    Team VARCHAR(50) NULL,
    CONSTRAINT UC_ForumNomeTeam UNIQUE (Nome, Team)  
);

CREATE TABLE ThreadForum (
    ID INT IDENTITY PRIMARY KEY,
    Titolo NVARCHAR(255) NOT NULL,
    Testo NVARCHAR(MAX) NULL,
    ForumID INT NOT NULL,
    AutoreID INT NOT NULL,
    DataCreazione DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK_Thread_Forum FOREIGN KEY (ForumID) 
        REFERENCES Forum(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_Thread_Autore FOREIGN KEY (AutoreID) 
        REFERENCES Utenti(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT UC_TitoloForumData UNIQUE (Titolo, ForumID, DataCreazione) 
);

CREATE TABLE MessaggiThread (
    ID INT IDENTITY PRIMARY KEY,
    ThreadID INT NOT NULL,
    AutoreID INT NOT NULL,
    Testo NVARCHAR(MAX) NOT NULL,
    DataCreazione DATETIME DEFAULT GETDATE(),
    CONSTRAINT FK_Messaggio_Thread FOREIGN KEY (ThreadID) 
        REFERENCES ThreadForum(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_Messaggio_Autore FOREIGN KEY (AutoreID) 
        REFERENCES Utenti(ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE Ticket (
    ID INT IDENTITY PRIMARY KEY,
    Titolo NVARCHAR(200) NOT NULL,
    Descrizione NVARCHAR(MAX) NOT NULL,
    Stato VARCHAR(20) NOT NULL DEFAULT 'Aperto',
    CreatoDaID INT NOT NULL,
    AssegnatoAID INT NULL,
    DataApertura DATETIME DEFAULT GETDATE(),
    CONSTRAINT CHK_Stato CHECK (Stato IN ('Aperto', 'In lavorazione', 'Chiuso')),
    CONSTRAINT FK_Ticket_CreatoDa FOREIGN KEY (CreatoDaID) 
        REFERENCES Utenti(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT FK_Ticket_AssegnatoA FOREIGN KEY (AssegnatoAID) 
        REFERENCES Utenti(ID) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT UC_TicketTitoloData UNIQUE (Titolo, CreatoDaID, DataApertura) 
);

CREATE TABLE Likes (
    ID INT IDENTITY PRIMARY KEY,
    UtenteID INT NOT NULL,
    ThreadID INT NOT NULL,
    MiPiace BIT NOT NULL,
    DataLike DATETIME DEFAULT GETDATE(), 
    CONSTRAINT FK_Like_Utente FOREIGN KEY (UtenteID) 
        REFERENCES Utenti(ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT FK_Like_Thread FOREIGN KEY (ThreadID) 
        REFERENCES ThreadForum(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UC_UserThread UNIQUE (UtenteID, ThreadID)  
);
